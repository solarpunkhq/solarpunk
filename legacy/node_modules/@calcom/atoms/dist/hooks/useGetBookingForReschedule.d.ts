import type { getBookingForReschedule } from "@calcom/platform-libraries";
import type { ApiSuccessResponse } from "@calcom/platform-types";
export declare const QUERY_KEY = "user-booking";
interface IUseGetBookingForReschedule {
    onSuccess?: (res: ApiSuccessResponse<Awaited<ReturnType<typeof getBookingForReschedule>>>["data"]) => void;
    onError?: (err: Error) => void;
    uid?: string;
}
export declare const useGetBookingForReschedule: (props?: IUseGetBookingForReschedule) => import("@tanstack/react-query/build/legacy/types").UseQueryResult<void | {
    attendees: {
        email: string;
        name: string;
        bookingSeat: {
            data: import(".prisma/client").Prisma.JsonValue;
            id: number;
            bookingId: number;
            referenceUid: string;
            attendeeId: number;
        } | null;
    }[];
    location: string | null;
    description: string | null;
    user: {
        id: number;
    } | null;
    id: number;
    customInputs: import(".prisma/client").Prisma.JsonValue;
    smsReminderNumber: string | null;
    eventTypeId: number | null;
    uid: string;
    startTime: Date;
    endTime: Date;
    responses: Record<string, string | boolean | string[] | Record<string, string> | {
        value: string;
        optionValue: string;
    }>;
} | null, Error>;
export {};
//# sourceMappingURL=useGetBookingForReschedule.d.ts.map