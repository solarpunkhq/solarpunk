import type { ApiErrorResponse } from "@calcom/platform-types";
interface IUseCancelBooking {
    onSuccess?: () => void;
    onError?: (err: ApiErrorResponse | Error) => void;
}
export declare const useCancelBooking: ({ onSuccess, onError }?: IUseCancelBooking) => import("@tanstack/react-query/build/legacy/types").UseMutationResult<import("@calcom/platform-types").ApiSuccessResponseWithoutData | ApiErrorResponse, Error, {
    id?: number | undefined;
    uid?: string | undefined;
    allRemainingBookings?: boolean | undefined;
    cancellationReason?: string | undefined;
    seatReferenceUid?: string | undefined;
}, unknown>;
export {};
//# sourceMappingURL=useCancelBooking.d.ts.map