import type { BookingResponse } from "@calcom/platform-libraries";
import type { ApiErrorResponse, ApiSuccessResponse } from "@calcom/platform-types";
interface IUseCreateBooking {
    onSuccess?: (res: ApiSuccessResponse<BookingResponse>) => void;
    onError?: (err: ApiErrorResponse | Error) => void;
}
export declare const useCreateBooking: ({ onSuccess, onError }?: IUseCreateBooking) => import("@tanstack/react-query/build/legacy/types").UseMutationResult<ApiErrorResponse | ApiSuccessResponse<{
    luckyUsers?: number[] | undefined;
    user: {
        email: null;
        username?: string | null | undefined;
        name?: string | null | undefined;
        timeZone?: string | undefined;
    };
    payment?: {
        data: import(".prisma/client").Prisma.JsonValue;
        refunded: boolean;
        success: boolean;
        currency: string;
        paymentOption: import(".prisma/client").$Enums.PaymentOption | null;
        id: number;
        bookingId: number;
        uid: string;
        externalId: string;
        appId: string | null;
        amount: number;
        fee: number;
    }[] | undefined;
    attendees?: {
        email: string;
        name: string;
        timeZone: string;
        id: number;
        bookingId: number | null;
        locale: string | null;
    }[] | undefined;
    references?: {
        type: string;
        credentialId: number | null;
        id: number;
        deleted: boolean | null;
        bookingId: number | null;
        uid: string;
        thirdPartyRecurringEventId: string | null;
        meetingId: string | null;
        meetingPassword: string | null;
        meetingUrl: string | null;
        externalCalendarId: string | null;
    }[] | undefined;
    paid?: boolean | undefined;
    location?: string | null | undefined;
    title?: string | undefined;
    description?: string | null | undefined;
    status?: import(".prisma/client").$Enums.BookingStatus | undefined;
    rescheduled?: boolean | null | undefined;
    rating?: number | null | undefined;
    metadata?: import(".prisma/client").Prisma.JsonValue | undefined;
    id?: number | undefined;
    userId?: number | null | undefined;
    customInputs?: import(".prisma/client").Prisma.JsonValue | undefined;
    smsReminderNumber?: string | null | undefined;
    eventTypeId?: number | null | undefined;
    recurringEventId?: string | null | undefined;
    uid?: string | undefined;
    cancellationReason?: string | null | undefined;
    iCalUID?: string | null | undefined;
    responses?: import(".prisma/client").Prisma.JsonValue | undefined;
    startTime?: Date | undefined;
    endTime?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | null | undefined;
    idempotencyKey?: string | null | undefined;
    userPrimaryEmail?: string | null | undefined;
    destinationCalendarId?: number | null | undefined;
    rejectionReason?: string | null | undefined;
    dynamicEventSlugRef?: string | null | undefined;
    dynamicGroupSlugRef?: string | null | undefined;
    fromReschedule?: string | null | undefined;
    scheduledJobs?: string[] | undefined;
    isRecorded?: boolean | undefined;
    iCalSequence?: number | undefined;
    ratingFeedback?: string | null | undefined;
    noShowHost?: boolean | null | undefined;
    appsStatus?: import("@calcom/platform-libraries").AppsStatus[] | undefined;
    seatReferenceUid?: string | undefined;
    paymentUid?: string | undefined;
    message?: string | undefined;
    paymentId?: number | undefined;
}> | ApiSuccessResponse<{
    references: import("@calcom/types/EventManager").PartialReference[];
    seatReferenceUid: string | undefined;
    luckyUsers?: number[] | undefined;
    user: {
        email: null;
        username?: string | null | undefined;
        name?: string | null | undefined;
        timeZone?: string | undefined;
    };
    payment: {
        data: import(".prisma/client").Prisma.JsonValue;
        refunded: boolean;
        success: boolean;
        currency: string;
        paymentOption: import(".prisma/client").$Enums.PaymentOption | null;
        id: number;
        bookingId: number;
        uid: string;
        externalId: string;
        appId: string | null;
        amount: number;
        fee: number;
    }[];
    attendees: {
        email: string;
        name: string;
        timeZone: string;
        id: number;
        bookingId: number | null;
        locale: string | null;
    }[];
    paid: boolean;
    location: string | null;
    title: string;
    description: string | null;
    status: import(".prisma/client").$Enums.BookingStatus;
    rescheduled: boolean | null;
    rating: number | null;
    metadata: import(".prisma/client").Prisma.JsonValue;
    id: number;
    userId: number | null;
    customInputs: import(".prisma/client").Prisma.JsonValue;
    smsReminderNumber: string | null;
    eventTypeId: number | null;
    recurringEventId: string | null;
    uid: string;
    cancellationReason: string | null;
    iCalUID: string | null;
    responses: import(".prisma/client").Prisma.JsonValue;
    startTime: Date;
    endTime: Date;
    createdAt: Date;
    updatedAt: Date | null;
    idempotencyKey: string | null;
    userPrimaryEmail: string | null;
    destinationCalendarId: number | null;
    rejectionReason: string | null;
    dynamicEventSlugRef: string | null;
    dynamicGroupSlugRef: string | null;
    fromReschedule: string | null;
    scheduledJobs: string[];
    isRecorded: boolean;
    iCalSequence: number;
    ratingFeedback: string | null;
    noShowHost: boolean | null;
    appsStatus?: import("@calcom/platform-libraries").AppsStatus[] | undefined;
    paymentUid?: string | undefined;
    paymentId?: number | undefined;
}>, Error, {
    language: string;
    timeZone: string;
    metadata: Record<string, string>;
    eventTypeId: number;
    start: string;
    end?: string | undefined;
    eventTypeSlug?: string | undefined;
    rescheduleUid?: string | undefined;
    recurringEventId?: string | undefined;
    user?: string | string[] | undefined;
    bookingUid?: string | undefined;
    hasHashedBookingLink?: boolean | undefined;
    hashedLink?: string | null | undefined;
    seatReferenceUid?: string | undefined;
}, unknown>;
export {};
//# sourceMappingURL=useCreateBooking.d.ts.map