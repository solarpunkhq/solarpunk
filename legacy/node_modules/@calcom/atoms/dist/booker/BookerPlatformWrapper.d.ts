import type { BookerProps } from "@calcom/features/bookings/Booker";
import type { BookingResponse } from "@calcom/platform-libraries";
import type { ApiErrorResponse, ApiSuccessResponse, ApiSuccessResponseWithoutData } from "@calcom/platform-types";
type BookerPlatformWrapperAtomProps = Omit<BookerProps, "entity"> & {
    rescheduleUid?: string;
    bookingUid?: string;
    firstName?: string;
    lastName?: string;
    guests?: string[];
    name?: string;
    onCreateBookingSuccess?: (data: ApiSuccessResponse<BookingResponse>) => void;
    onCreateBookingError?: (data: ApiErrorResponse | Error) => void;
    onCreateRecurringBookingSuccess?: (data: ApiSuccessResponse<BookingResponse[]>) => void;
    onCreateRecurringBookingError?: (data: ApiErrorResponse | Error) => void;
    onCreateInstantBookingSuccess?: (data: ApiSuccessResponse<BookingResponse>) => void;
    onCreateInstantBookingError?: (data: ApiErrorResponse | Error) => void;
    onReserveSlotSuccess?: (data: ApiSuccessResponse<string>) => void;
    onReserveSlotError?: (data: ApiErrorResponse) => void;
    onDeleteSlotSuccess?: (data: ApiSuccessResponseWithoutData) => void;
    onDeleteSlotError?: (data: ApiErrorResponse) => void;
};
export declare const BookerPlatformWrapper: (props: BookerPlatformWrapperAtomProps) => JSX.Element;
export {};
//# sourceMappingURL=BookerPlatformWrapper.d.ts.map